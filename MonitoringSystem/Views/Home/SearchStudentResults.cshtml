@using MonitoringSystem.Models
@model MonitoringSystem.Models.Student

@{
    ViewBag.Title = "Результаты поиска";
}

<h2>@Model.LastName @Model.FirstName @Model.MiddleName</h2>
    

@{ 
    foreach (var subject in Model.Group.Subjects)
        {
           <p>@subject.SubjectName Семестр:@subject.Term</p>
           <table class="table table-bordered table-hover">
               <thead>
                   <tr>
                       <th></th>
                       @{
                           List<LabMaxPoint> labMaxPoints = subject.LabMaxPoints.Where(m => m.Subject.SubjectID == subject.SubjectID).ToList();
                           List<HWMaxPoint> hwMaxPoints = subject.HWMaxPoints.Where(m => m.Subject.SubjectID == subject.SubjectID).ToList();
                           List<ModuleMaxPoint> moduleMaxPoints = subject.ModuleMaxPoints.Where(m => m.Subject.SubjectID == subject.SubjectID).ToList();
                           List<FreeMarkFieldMaxPoint> freeMarkFieldMaxPoints = subject.FreeMarkFieldMaxPoints.Where(m => m.Subject.SubjectID == subject.SubjectID ).ToList();
                           List<OneItemPoint> oip = subject.OneItemPoints.Where(oi => oi.Subject.SubjectID == subject.SubjectID).ToList();
                           List<Attendance> atts = subject.Attendances.Where(m => m.Subject.SubjectID == subject.SubjectID).ToList();

                           double attendance = 0, oneItemPoint = 0;
                           foreach (var att in atts)
                           {
                               if (att.IsVisited == true)
                               {
                                   oip[0].Value = oip[0].Value.Replace('.', ',');
                                   attendance += Convert.ToDouble(oip[0].Value);
                               }
                           }
                           oneItemPoint = atts.Count() > 0 ? Convert.ToDouble(oip[0].Value.Replace('.', ',')) * atts.Max(at => at.Index) : 0;
                           if (labMaxPoints.Count != 0)
                           {
                               for (int i = 1; i <= labMaxPoints.Max(l => l.LabNumber); i++)
                               {
                                   string labNumber = "labnumber_" + i.ToString();
                                   <th id=@labNumber>ЛР @i</th>
                               }
                           }
                           if (hwMaxPoints.Count != 0)
                           {
                               for (int i = 1; i <= hwMaxPoints.Max(hw => hw.HWNumber); i++)
                               {
                                   string hwNumber = "hwnumber_" + i.ToString();
                                   <th id=@hwNumber>РР @i</th>
                               }
                           }
                           if (moduleMaxPoints.Count != 0)
                           {
                               for (int i = 1; i <= moduleMaxPoints.Max(m => m.ModuleNumber); i++)
                               {
                                   string moduleNumber = "modulenumber_" + i.ToString();
                                   <th id=@moduleNumber>Mодуль @i</th>
                               }
                           }
                           if (freeMarkFieldMaxPoints.Count != 0)
                           {
                               for (int i = 0; i < freeMarkFieldMaxPoints.Max(m => m.FieldNumber); i++)
                               {
                                   string freeFieldNumber = "freefieldnumber_" + i.ToString();
                                   <th id=@freeFieldNumber>@freeMarkFieldMaxPoints[i].FieldName.ToString()</th>
                               }
                           }
                       }
                       <th>Лекции</th>
                       <th>Сумма</th>
                       <th>Автомат</th>
                   </tr>
                   <tr class="maxpoints">
                       <th><p id="max-points-title">Максмальные баллы</p></th>
                       @{
                           if (labMaxPoints.Count != 0)
                           {
                               for (int i = 0; i < labMaxPoints.Max(ln => ln.LabNumber); i++)
                               {
                                   string currentMaxLabId = labMaxPoints[i].LabMaxPointID.ToString() + "_maxlab";
                                   <th class="maxlab">
                                       @*<input class="max-point" type="number" value=@labMaxPoints[i].MaxPoint.ToString() id=@currentMaxLabId>*@
                                       @labMaxPoints[i].MaxPoint.ToString()
                                   </th>
                               }
                           }
                           if (hwMaxPoints.Count != 0)
                           {
                               for (int i = 0; i < hwMaxPoints.Max(ln => ln.HWNumber); i++)
                               {
                                   string currentMaxHWId = hwMaxPoints[i].HWMaxPointID.ToString() + "_maxhw";
                                   <th class="maxhw">
                                       @*<input class="max-point" type="number" value=@hwMaxPoints[i].MaxPoint.ToString() id=@currentMaxHWId>*@
                                       @hwMaxPoints[i].MaxPoint.ToString()
                                   </th>
                               }
                           }
                           if (moduleMaxPoints.Count != 0)
                           {
                               for (int i = 0; i < moduleMaxPoints.Max(ln => ln.ModuleNumber); i++)
                               {
                                   string currentMaxModuleId = moduleMaxPoints[i].ModuleMaxPointID.ToString() + "_maxmodule";
                                   <th class="maxmodule">
                                       @*<input class="max-point" type="number" value=@moduleMaxPoints[i].MaxPoint.ToString() id=@currentMaxModuleId>*@
                                       @moduleMaxPoints[i].MaxPoint.ToString()
                                   </th>
                               }
                           }
                           if (freeMarkFieldMaxPoints.Count != 0)
                           {
                               for (int i = 0; i < freeMarkFieldMaxPoints.Max(fr => fr.FieldNumber); i++)
                               {
                                   string currentMaxFreeFieldPoint = freeMarkFieldMaxPoints[i].FreeMarkFieldMaxPointID.ToString() + "_maxfreefieldpoint";
                                   <th class="maxfreefieldpoint">
                                       @*<input class="max-point" type="number" value=@freeMarkFieldMaxPoints[i].MaxPoint.ToString() id=@currentMaxFreeFieldPoint>*@
                                       @freeMarkFieldMaxPoints[i].MaxPoint.ToString()
                                   </th>
                               }
                           }
                       }
                       <th><p id="maxlectures">@oneItemPoint.ToString().Replace(',', '.')</p></th>
                       <th><p id="automat-title">100</p></th>
                       <th><p id="ECTS-title">ECTS</p></th>
                   </tr>
               </thead>
               <tbody>
                   <tr id=@Model.RecordBookNumberID.ToString()>
                       <td class="name">@Model.LastName @Model.FirstName.Substring(0, 1). @Model.MiddleName.Substring(0, 1)</td>
                       @{
                           //Оценки
                           List
                           <Mark>
                               marks = subject.Marks.Where(m => m.RecordBookNumberID == Model.RecordBookNumberID).ToList();
                           if (marks.Count > 0)
                           {
                               for (int j = 0; j < marks.Max(l => l.LabNumber); j++)
                               {
                                   if (j < marks.Count)
                                   {
                                       if (marks[j] != null)
                                       {
                                           string currentLabId = marks[j].MarkID.ToString() + "_lab";
                                           <td class="lab">
                                               <div class="point-normal">
                                                   @*<input type="number" class="student-point" id=@currentLabId value=@marks[j].TheMark.ToString() />*@
                                                   @marks[j].TheMark.ToString()
                                               </div>
                                               @*<div class="date-process-hidden">
                                                   <label>Отчет: </label>
                                                   <input type="date" class="point-date-of-report" value=@marks[j].DateOfReport.ToString("yyyy-MM-dd") />

                                                   <label>Приложение: </label>
                                                   <input type="date" class="point-date-of-program" value=@marks[j].DateOfProgram.ToString("yyyy-MM-dd") />
                                               </div>*@
                                           </td>
                                       }
                                   }
                                   else
                                   {
                                       <td>0</td>
                                   }
                               }
                           }

                           //домашки
                           List<HomeWork>
                               hws = subject.HomeWorks
                               .Where(hw => hw.RecordBookNumberID == Model.RecordBookNumberID).ToList();
                           if (hws.Count > 0)
                           {
                               for (int j = 0; j < hws.Max(hw => hw.HWNumber); j++)
                               {
                                   if (j < hws.Count)
                                   {
                                       if (hws[j] != null)
                                       {
                                           string currentHwId = hws[j].HomeWorkID.ToString() + "_hw";
                                           <td class="hw">
                                               <div class="point-normal">
                                                  @* <input type="number" class="student-point" id=@currentHwId value=@hws[j].HWPoint.ToString() />*@
                                                   @hws[j].HWPoint.ToString()
                                               </div>
                                               @*<div class="date-process-hidden">
                                                   <label>Отчет: </label>
                                                   <input type="date" class="point-date-of-report" value=@hws[j].DateOfReport.ToString("yyyy-MM-dd") />

                                                   <label>Приложение: </label>
                                                   <input type="date" class="point-date-of-program" value=@hws[j].DateOfProgram.ToString("yyyy-MM-dd") />
                                               </div>*@
                                           </td>
                                       }
                                   }
                                   else
                                   {
                                       <td>0</td>
                                   }
                               }
                           }

                           List<Module>
                               modules = subject.Modules
                               .Where(m => m.RecordBookNumberID == Model.RecordBookNumberID).ToList();
                           if (modules.Count > 0)
                           {
                               for (int j = 0; j < modules.Max(m => m.ModuleNumber); j++)
                               {
                                   if (j < modules.Count)
                                   {
                                       if (modules[j] != null)
                                       {
                                           string currentModuleId = modules[j].ModuleID.ToString() + "_module";
                                           <td class="module">
                                               <div class="point-module">
                                                   @*<input type="number" class="student-point-module" id=@currentModuleId value=@modules[j].ModulePoint.ToString() />*@
                                                   @modules[j].ModulePoint.ToString()
                                               </div>
                                           </td>
                                       }
                                   }
                                   else
                                   {
                                       <td>0</td>
                                   }
                               }
                           }

                           List<FreeMarkField>
                               freeMarkFields = subject.FreeMarkFields
                               .Where(m => m.RecordBookNumberID == Model.RecordBookNumberID).ToList();
                           if (freeMarkFields.Count > 0)
                           {
                               for (int j = 0; j < freeMarkFields.Max(m => m.FieldNumber); j++)
                               {
                                   if (j < freeMarkFields.Count)
                                   {
                                       if (freeMarkFields[j] != null)
                                       {
                                           string currentFreeFieldId = freeMarkFields[j].FreeMarkFieldID.ToString() + "_freemarkfield";
                                           <td class="freemarkfield">
                                               <div class="point-module">
                                                   @*<input type="number" class="student-point-freemarkfield" id=@currentFreeFieldId value=@freeMarkFields[j].FieldPoint.ToString() />*@
                                                   value=@freeMarkFields[j].FieldPoint.ToString()
                                               </div>
                                           </td>
                                       }
                                   }
                                   else
                                   {
                                       <td>0</td>
                                   }
                               }
                           }
                           <td class="lectures">
                               <p id="studentAttends">@attendance.ToString().Replace(',', '.')</p>
                           </td>
                           string studentMark = Model.RecordBookNumberID + "_automat";
                           string studentECTS = Model.RecordBookNumberID + "_ECTS";
                           <td class="automat">
                               <p id=@studentMark></p>
                           </td>
                           <td class="ECTS">
                               <p id=@studentECTS></p>
                           </td>
                       }
                   </tr>
               </tbody>
           </table> 
           <hr />
           <hr />
        }
    

   
        foreach (var subjectCPs in Model.SubjectCPs)
        {

        }
    
}

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Group.GroupID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MiddleName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
    </tr>


    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Group.GroupID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
        </tr>
    }

</table>*@